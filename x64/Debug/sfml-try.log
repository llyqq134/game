  sfml-try.cpp
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Init_FreeType в функции "public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Done_FreeType в функции "private: void __cdecl sf::Font::cleanup(void)" (?cleanup@Font@sf@@AEAAXXZ).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_New_Face в функции "public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_New_Memory_Face в функции "public: bool __cdecl sf::Font::loadFromMemory(void const *,unsigned __int64)" (?loadFromMemory@Font@sf@@QEAA_NPEBX_K@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Open_Face в функции "public: bool __cdecl sf::Font::loadFromStream(class sf::InputStream &)" (?loadFromStream@Font@sf@@QEAA_NAEAVInputStream@2@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Done_Face в функции "public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Set_Pixel_Sizes в функции "private: bool __cdecl sf::Font::setCurrentSize(unsigned int)const " (?setCurrentSize@Font@sf@@AEBA_NI@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Load_Char в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Get_Kerning в функции "public: float __cdecl sf::Font::getKerning(unsigned int,unsigned int,unsigned int,bool)const " (?getKerning@Font@sf@@QEBAMIII_N@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Select_Charmap в функции "public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Get_Char_Index в функции "public: class sf::Glyph const & __cdecl sf::Font::getGlyph(unsigned int,unsigned int,bool,float)const " (?getGlyph@Font@sf@@QEBAAEBVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_MulFix в функции "public: float __cdecl sf::Font::getUnderlinePosition(unsigned int)const " (?getUnderlinePosition@Font@sf@@QEBAMI@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Get_Glyph в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Glyph_To_Bitmap в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Done_Glyph в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Outline_Embolden в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Bitmap_Embolden в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Stroker_New в функции "public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Stroker_Set в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Stroker_Done в функции "public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
sfml-graphics-s-d.lib(Font.obj) : error LNK2019: ссылка на неразрешенный внешний символ FT_Glyph_Stroke в функции "private: class sf::Glyph __cdecl sf::Font::loadGlyph(unsigned int,unsigned int,bool,float)const " (?loadGlyph@Font@sf@@AEBA?AVGlyph@2@II_NM@Z).
C:\Users\kirik\source\repos\sfml-try\sfml-try\x64\Debug\sfml-try.exe : fatal error LNK1120: неразрешенных внешних элементов: 21
